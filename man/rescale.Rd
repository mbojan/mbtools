% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rescale.R
\name{rescale}
\alias{rescale}
\title{Rescale linearly to new minimum and maximum}
\usage{
rescale(x, nmin = 0, nmax = 1, na.rm = TRUE, from = range(x, na.rm =
  na.rm), to = c(nmin, nmax), coef = FALSE)
}
\arguments{
\item{x}{numeric vector to rescale}

\item{nmin}{numeric scalar, new minimum, defaults to 0}

\item{nmax}{numeric scalar, new maximum, defaults to 1}

\item{na.rm}{logical, should the missing values be removed, defaults to
\code{TRUE}}

\item{from}{numeric vector of length two, range from which to rescale.
Defaults to the range of \code{x}.}

\item{to}{numeric vector of length two, output range}

\item{coef}{logical, should a vector with coefficients of the transformation
be returned instead}
}
\value{
If \code{coef} is \code{FALSE}, which is the default, a vector of
transformed values of \code{x} is returned. If it is \code{TRUE} then the
list with components \code{a} and \code{b} is returned containing the
coefficients of the transformation.
}
\description{
Linerarly rescale values of a numeric vector so that the result have new
prescribed minimum and maximum.
}
\details{
Imports \code{rescale} from package \pkg{scales}.
}
\examples{
set.seed(123)
x <- rnorm(20)
y <- rescale(x)
summary(x)
summary(y)
# coefficients of the transformation
k <- rescale(x, coef=TRUE)
k

# show how it works on the plot
plot(x, y, xlab="x", ylab="Result", main="Mechanics of 'rescale()'",
  axes=TRUE, asp=1, sub=paste("a=", k[1], ", b=", k[2], sep=""))
abline(v=c(min(x), max(x)), lty=2, col="gray")
abline(h=c(min(y), max(y)), lty=2, col="gray")
abline(a=k[1], b=k[2], col="gray")
text( (max(x) + min(x))/2, (max(y) + min(y))/2,
  label="a + bx", srt=tan(k[2]) / pi * 180, pos=3)
}
\seealso{
\code{\link{scale}}
}
\keyword{arith}
